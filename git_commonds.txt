
Step1 : 在目录中创建新的git仓库
	cmd : git init

Step2 : 添加文件到缓存区
	cmd : git add xxx.txt

Step3 : 把缓存区的内容添加到仓库中
	cmd : git commit -m version_name

Step4 : 查看版本记录
	cmd : git log 查看当前头指针及之前的版本记录
	cmd : git log --pretty=oneline 每个版本只显示一行，便于查看
	cmd : git reflog 查看所有版本操作记录

Step5 : 更换版本
	从当前版本计数，更换到之前的55个版本
	cmd : git reset --hard HAED~55

	更换到任意一个版本，首先需要git reflog查看所有版本号，如果使用git log，可能无法看到当前HEAD之后的版本号
	cmd : git reset --hard 版本号id(前几位就行)

查看工作区操作记录，包括缓存区add之后未提交的记录
	cmd : git status

Step6 : 撤销工作区的改动(本地代码,并且未add到缓存区)
	cmd : git checkout -- xxx.txt

Step7 : 撤销暂存区的改动（已经add到暂存区了）
	cmd : git reset HEAD xxx.txt
	之后暂存区的文件就退回到工作区了，然后可以再使用Step6的命令撤销工作区的改动。

Step8 : 在本地电脑生成ssh密钥，并复制到github网站中的ssh里
	ssh-keygen -t rsa -C 'ieluoyiming@163.com'

Step9 : 创建分支
	git checkout -b ielym

Step10 : 查看分支
	git branch

Step9 : 上传本地分支到远程分支
	git push origin ielym

Step10 : 使本地分支跟踪远程分支
	git branch --set-upstream-to=origin/远程分支名称 本地分支名称
	git branch --set-upstream-to=origin/ielym ielym 
	之后，再上传本地分支到远程分支，就可以直接使用git push即可,但本地仍需要git add和git commit
	


